{"version":3,"sources":["apis/contactsApi.js","apis/groupsApi.js","components/groups/ContactCardStar.js","components/groups/ContactCard.js","components/InputField.js","components/Dialog.js","components/groups/AddCard.js","components/Modal.js","components/CustomInputField.js","components/ProfilePhoto.js","components/EditContact.js","pages/Groups.js","apis/profileApi.js","components/header/ProfileIcon.js","components/header/NotificationIcon.js","components/header/PopularityCounter.js","components/header/DarkModeToggle.js","components/header/Header.js","components/ContactsViewButton.js","components/ContactsOptionsBar.js","components/SearchBar.js","pages/Contacts.js","controllers/AuthController.js","apis/authApi.js","pages/auth/EnterEmail.js","pages/auth/SignUp.js","pages/auth/Login.js","pages/Profile.js","components/Routes.js","App.js","index.js"],"names":["ContactsAPI","toggleStar","url","starred","a","form","FormData","append","requestOptions","method","headers","Authorization","sessionStorage","getItem","mode","body","fetch","response","json","getContact","Accept","editContact","contact","JSON","stringify","firstName","lastName","emailAddress","email","organisation","role","phoneNumber","phone","GroupsAPI","getGroups","BASE_URL","groups","i","length","group","contactObjects","j","contacts","res","push","ContactCardStar","props","window","location","reload","ICON_SIZE","this","size","onClick","className","Star","style","fontSize","StarOutline","React","Component","ContactCard","getProfileIcon","history","pathname","match","replace","id","state","entries","quickview","Object","label","value","includes","setState","map","entry","withRouter","InputField","onChange","event","name","htmlFor","type","placeholder","error","DialogTitle","withStyles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","children","classes","onClose","other","disableTypography","Typography","variant","IconButton","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","useState","open","setOpen","handleClose","Button","Dialog","dividers","class","autoFocus","AddCard","modalStyle","left","bottom","backgroundColor","Modal","createPortal","document","getElementById","CustomInputField","onLabelChange","onDeleteChange","for","ProfilePhoto","onHiddenInputClick","onFileSelect","hiddenInputRef","current","click","getInitials","createRef","src","alt","accept","ref","EditContact","proceed","changeHandler","target","customChangeHandler","newCustomInput","customInput","parseInt","buttonDisabled","customLabelChangeHandler","getCustomFields","fields","item","listId","deleteCustomField","addCustomField","newCustomInputs","splice","save","substring","lastIndexOf","loading","photoURL","emailError","emailValid","params","goBack","disabled","Groups","setSearchTerm","componentDidMount","console","log","isLoaded","searchTerm","exact","path","component","triggerClassName","trigger","triggerOpenedClassName","triggerWhenOpen","filter","toLowerCase","key","accountEndpoint","profileEndpoint","ProfileAPI","getUserProfile","accountResponse","profileResponse","accountData","profileData","image","setItem","updateProfile","user","success","endpoint","updateCustomFields","userAccount","ProfileIcon","toggleMenu","dropdown","logout","clear","href","NotificationIcon","notifications","loadData","setInterval","e","notif","PopularityCounter","popularity","DarkModeToggle","light","dark","Header","ContactsViewButton","leftOnClick","leftLink","leftButtonState","rightButtonState","rightOnClick","rightLink","ContactsOptionsBar","newContactOnclick","Contacts","notes","useLocation","useHistory","setContacts","showInitials","first","second","useEffect","btoa","data","getContacts","Provider","index","x","AuthController","emailChangeHandler","validator","isEmail","valid","nameChangeHandler","passwordChangeHandler","password","passwordValidator","require","schema","is","min","max","has","uppercase","lowercase","digits","not","spaces","validate","confirmPasswordChangeHandler","confirmPassword","loginUser","username","token","AuthAPI","checkEmail","signup","userDetails","first_name","last_name","login","EnterEmail","result","nextHandler","exists","SignUp","passwordError","passwordValid","confirmPasswordResult","confirmPasswordError","confirmPasswordValid","firstNameValid","lastNameValid","backHandler","failed","errorMessage","firstNameError","lastNameError","lasttName","Login","Profile","preventBlankLabel","trim","photoChangeHandler","selected","URL","createObjectURL","files","getFields","getLeftCol","concat","colLen","Math","floor","slice","getRightCol","saveHandler","link","defaultPhotoURL","customFields","lastname","AppRouter","isLoggedIn","contactsPage","contactsOptionsBar","groupsPage","to","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.118ae69a.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nexport default class ContactsAPI {\n    static toggleStar = async (url, starred) => {\n        const form = new FormData();\n        form.append(\"starred\", starred);\n        const requestOptions = {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n            body: form,\n        };\n        const response = await fetch(url, requestOptions);\n        return response.json();\n    };\n\n    static getContact = async (url) => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n        };\n        const response = await fetch(url, requestOptions);\n        return response.json();\n    };\n\n    static editContact = async (url, contact) => {\n        const requestOptions = {\n            method: \"PATCH\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                firstName: contact.firstName,\n                lastName: contact.lastName,\n                emailAddress: contact.email,\n                organisation: contact.organisation,\n                role: contact.role,\n                phoneNumber: contact.phone,\n            }),\n        };\n        const response = await fetch(url, requestOptions);\n        return response.json();\n    };\n}\n\n// Getting list of ALL contacts\nexport async function getContacts() {\n    return axios.get(\"/crm/contacts/\").then((res) => res.data);\n}\n\nexport function useContacts() {\n    const [loading, setLoading] = useState(true);\n    const [items, setItems] = useState([]);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        getContacts()\n            .then((items) => {\n                setItems(items);\n                setLoading(false);\n            })\n            .catch((e) => {\n                setError(e);\n                setLoading(false);\n            });\n    }, []);\n\n    return {\n        loading,\n        items,\n        error,\n    };\n}\n\n// Adding a new contact\n\n/*\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        viewCompleted: false,\n        todoList: [],\n        modal: false,\n        activeItem: {\n          title: \"\",\n          description: \"\",\n          completed: false,\n        },\n      };\n    }\n  \n    componentDidMount() {\n      this.refreshList();\n    }\n  \n    refreshList = () => {\n      axios\n        .get(\"/api/todos/\")\n        .then((res) => this.setState({ todoList: res.data }))\n        .catch((err) => console.log(err));\n    };\n  \n    toggle = () => {\n      this.setState({ modal: !this.state.modal });\n    };\n  \n    handleSubmit = (item) => {\n      this.toggle();\n  \n      if (item.id) {\n        axios\n          .put(`/api/todos/${item.id}/`, item)\n          .then((res) => this.refreshList());\n        return;\n      }\n      axios\n        .post(\"/api/todos/\", item)\n        .then((res) => this.refreshList());\n    };\n  \n    handleDelete = (item) => {\n      axios\n        .delete(`/api/todos/${item.id}/`)\n        .then((res) => this.refreshList());\n    };\n  */\n","import ContactsAPI from \"./contactsApi\";\n\nconst BASE_URL = \"https://team-69-backend.herokuapp.com/crm/\";\n\nexport class GroupsAPI {\n    static getGroups = async () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization:\n                    `token ${sessionStorage.getItem(\"token\")}`\n            },\n            mode: \"cors\",\n        };\n        const response = await fetch(BASE_URL + \"groups/\", requestOptions);\n        var groups = await response.json();\n        for (let i = 0; i < groups.length; i++) {\n            const group = groups[i];\n            group.contactObjects = [];\n            for (let j = 0; j < group.contacts.length; j++) {\n                const res = await ContactsAPI.getContact(group.contacts[j]);\n                group.contactObjects.push(res);\n            }\n        }\n        return groups;\n    };\n}\n","import React from \"react\";\nimport { Star, StarOutline } from \"@material-ui/icons\";\nimport \"../../css/Groups.css\";\nimport ContactsAPI from \"../../apis/contactsApi\";\n\nexport default class ContactCardStar extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    toggleStar = async () => {\n        await ContactsAPI.toggleStar(this.props.url, !this.props.starred);\n        window.location.reload();\n    };\n\n    render() {\n        var ICON_SIZE = 23;\n        if (this.props.size !== null ) {\n            ICON_SIZE = this.props.size\n        }\n        return (\n            <div onClick={this.toggleStar}>\n                {this.props.starred ? (\n                    <div className=\"contact-star starred\"><Star style={{ fontSize: ICON_SIZE }} /></div>\n                ) : (\n                    <div className=\"contact-star unstarred\"><StarOutline style={{ fontSize: ICON_SIZE }} /></div>\n                )}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ContactCardStar from \"./ContactCardStar\";\nimport { withRouter } from \"react-router-dom\";\n\nclass ContactCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            entries: [],\n        };\n    }\n\n    componentDidMount() {\n        // TODO: Get QuickView fields from user settings\n        const quickview = [\"organisation\", \"role\"];\n        var entries = [];\n        for (const [label, value] of Object.entries(this.props.contact)) {\n            if (quickview.includes(label)) {\n                entries.push({ label: label, value: value });\n            }\n        }\n        this.setState({\n            entries: entries,\n        });\n    }\n\n    getProfileIcon = () => {\n        // TODO: Incorporate contact profile picture\n        return (\n            (this.props.contact.firstName && this.props.contact.firstName[0]) +\n            (this.props.contact.lastName && this.props.contact.lastName[0])\n        );\n    };\n\n    editContact = async () => {\n        this.props.history.push({\n            pathname: `${this.props.match.url.replace(/\\/$/g, \"\")}/edit/${\n                this.props.contact.id\n            }`,\n            url: this.props.contact.url,\n        });\n    };\n\n    render() {\n        return (\n            <div\n                className=\"rcorners group-contact-card\"\n                onClick={this.editContact}\n            >\n                <div className=\"contact-card-title\">\n                    <div className=\"left-col\">\n                        <div className=\"dot\">\n                            <div className=\"centeredInDot\">\n                                {this.getProfileIcon()}\n                            </div>\n                        </div>\n                        <div>\n                            {this.props.contact.firstName}{\" \"}\n                            {this.props.contact.lastName}\n                        </div>\n                    </div>\n                    <div className=\"right-col\">\n                        <ContactCardStar\n                            starred={this.props.contact.starred}\n                            url={this.props.contact.url}\n                        />\n                    </div>\n                </div>\n                <div className=\"\">\n                    <table className=\"contact-details\">\n                        {this.state.entries.map((entry) => {\n                            return (\n                                <tr>\n                                    <th>{entry.label}</th>\n                                    <td>{entry.value}</td>\n                                </tr>\n                            );\n                        })}\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ContactCard);\n","import React from \"react\";\nimport \"../css/InputField.css\";\n\nclass InputField extends React.Component {\n    onChange = (event) => {\n        this.props.onChange(event);\n    };\n\n    render() {\n        return (\n            <div className=\"input-field\">\n                <div className=\"label\">\n                    <label id={this.props.name} htmlFor={this.props.name}>\n                        {this.props.label}\n                    </label>\n                </div>\n                <input\n                    id={this.props.name}\n                    type={this.props.type}\n                    name={this.props.name}\n                    placeholder={this.props.placeholder}\n                    onChange={this.onChange}\n                    value={this.props.value}\n                />\n                <div className=\"input-error\">{this.props.error}</div>\n            </div>\n        );\n    }\n}\n\nexport default InputField;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport InputField from './InputField';\nimport '../css/Dialog.css';\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function CustomizedDialogs() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button color=\"primary\" onClick={handleClickOpen}>\n        + Add Contact\n      </Button>\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n          Contact Details\n        </DialogTitle>\n        <DialogContent dividers>\n            <div class=\"split\">\n                <div>First Name</div>\n                <InputField/>\n                <div>Last Name</div>\n                <InputField/>\n                <div>Group</div>\n                <InputField/>\n                <div>Email Address</div>\n                <InputField/>\n                <div>Phone Number</div>\n                <InputField/>\n                <div>Notes</div>\n                <InputField/>\n            </div>\n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} color=\"primary\">\n            Delete\n          </Button>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CustomizedDialogs from \"../Dialog\";\n\nexport default class AddCard extends React.Component {\n    render() {\n        return (\n            <div class=\"add-contact-card\">\n                <div class=\"center iris60\">\n                    <CustomizedDialogs />\n                </div>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\n\nconst modalStyle = {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n    backgroundColor: \"rgba(0,0,0,.5)\"\n};\n\nexport default class Modal extends React.Component {\n    render() {\n        return createPortal(\n            <div style={modalStyle} onClick={this.props.onClick}>\n                {this.props.children}\n            </div>,\n            document.getElementById(\"modal_root\")\n        );\n    }\n}\n","import React from \"react\";\nimport \"../css/InputField.css\";\nimport { FaMinusCircle, FontAwesome } from \"react-icons/fa\";\n\n/**\n * Custom Input Field\n * Input field with a customisable label with props:\n * - onChange: callback function for when input field value is changed\n * - onLabelChange: callback function for when input field label is changed\n * - onDeleteChange: callback function for when delete button is clicked \n * - name: input label name (usually index)\n * - label: current label \n * - value: current value\n * - placeholder: value placeholder\n */\nclass CustomInputField extends React.Component {\n    onChange = (event) => {\n        this.props.onChange(event);\n    };\n\n    onLabelChange = (event) => {\n        this.props.onLabelChange(event);\n    };\n\n    onDeleteChange = () => {\n        this.props.onDeleteChange(this.props.name);\n    };\n\n    render() {\n        return (\n            <div className=\"input-field custom-input-field\">\n                <div className=\"label\">\n                    <label for={this.props.name}>\n                        <input\n                            type=\"text\"\n                            className=\"custom-input-label\"\n                            name={this.props.name}\n                            value={this.props.label}\n                            onChange={this.onLabelChange}\n                        />\n                    </label>\n                    <FaMinusCircle\n                        className=\"delete-button\"\n                        id={this.props.name}\n                        onClick={this.onDeleteChange}\n                    />\n                </div>\n                <input\n                    type=\"text\"\n                    name={this.props.name}\n                    placeholder={this.props.placeholder}\n                    onChange={this.onChange}\n                    value={this.props.value}\n                />\n                <div className=\"input-error\">{this.props.error}</div>\n            </div>\n        );\n    }\n}\n\nexport default CustomInputField;\n","import React from \"react\";\nimport axios from \"axios\";\nimport \"../css/Profile.css\";\nimport { FontAwesome } from \"react-icons/fa\";\nimport { FaCamera } from \"react-icons/fa\";\n\n/**\n * Profile photo icon which can be found on the profile page\n * - Displayes user's current profile photo\n * - On click, file selector opens and user can select a new profile photo\n * props:\n * - src\n * - alt\n * - firstName\n * - lastName\n */\n\nclass ProfilePhoto extends React.Component {\n    constructor(props) {\n        super(props);\n        this.hiddenInputRef = React.createRef();\n    }\n\n    onHiddenInputClick = async (event) => {\n        this.props.onChange(event);\n    };\n\n    onFileSelect = (event) => {\n        this.hiddenInputRef.current.click();\n    };\n\n    getInitials = () => {\n        return (\n            (this.props.firstName && this.props.firstName[0]) +\n            (this.props.lastName && this.props.lastName[0])\n        );\n    };\n\n    render() {\n        return (\n            <div className=\"profile-photo-row\">\n                <div className=\"profile-photo\" onClick={this.onFileSelect}>\n                    {this.props.src === \"\" ? (\n                        <div className=\"large-profile-initials\">\n                            <div className=\"large-initials\">\n                                {this.getInitials()}\n                            </div>\n                        </div>\n                    ) : (\n                        <img src={this.props.src} alt={this.props.alt}></img>\n                    )}\n                    <div className=\"overlay-icon\">\n                        <FaCamera />\n                    </div>\n                    <input\n                        className=\"invisible-button\"\n                        type=\"file\"\n                        accept=\"image/png, image/jpeg\"\n                        onChange={this.onHiddenInputClick}\n                        ref={this.hiddenInputRef}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProfilePhoto;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nimport \"../css/EditContact.css\";\nimport ContactsAPI from \"../apis/contactsApi\";\nimport InputField from \"./InputField\";\nimport CustomInputField from \"./CustomInputField\";\nimport ProfilePhoto from \"./ProfilePhoto\";\nimport ContactCardStar from \"./groups/ContactCardStar\";\n\nexport default class EditContact extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: \"\",\n            loading: true,\n            starred: false,\n            photoURL: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            organisation: \"\",\n            role: \"\",\n            phone: \"\",\n            emailError: \"\",\n            emailValid: true,\n            customInput: [],\n        };\n    }\n\n    async componentDidMount() {\n        // const contact = await ContactsAPI.getContact(this.props.location.url);\n        const endpoint = \"https://team-69-backend.herokuapp.com/crm/contacts/\";\n        const url = endpoint + this.props.match.params.id + \"/\";\n        const contact = await ContactsAPI.getContact(url);\n        this.setState({\n            url: url,\n            starred: contact.starred,\n            loading: false,\n            photoURL: \"\",\n            firstName: contact.firstName,\n            lastName: contact.lastName,\n            email: contact.emailAddress,\n            organisation: contact.organisation,\n            role: contact.role,\n            phone: contact.phoneNumber,\n        });\n        // TODO: ADD CUSTOM FIELDS\n    }\n\n    proceed = () => {\n        return true;\n    };\n\n    changeHandler = async (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    customChangeHandler = async (event) => {\n        const newCustomInput = this.state.customInput;\n        const id = parseInt(event.target.name);\n        newCustomInput[id] = {\n            label: this.state.customInput[id].label,\n            value: event.target.value,\n        };\n        this.setState({\n            customInput: newCustomInput,\n            buttonDisabled: false,\n        });\n    };\n\n    customLabelChangeHandler = async (event) => {\n        const newCustomInput = this.state.customInput;\n        const id = parseInt(event.target.name);\n        newCustomInput[id] = {\n            label: event.target.value,\n            value: this.state.customInput[id].value,\n        };\n        // labels must not be blank\n        this.setState({\n            customInput: newCustomInput,\n            buttonDisabled: false,\n        });\n    };\n\n    getCustomFields = () => {\n        var fields = [];\n        for (const [id, item] of this.state.customInput.entries()) {\n            fields.push(\n                <CustomInputField\n                    key={id}\n                    listId={id}\n                    label={item.label}\n                    type=\"text\"\n                    placeholder=\"Enter field value\"\n                    value={item.value}\n                    name={id}\n                    onChange={this.customChangeHandler}\n                    onLabelChange={this.customLabelChangeHandler}\n                    onDeleteChange={this.deleteCustomField}\n                />\n            );\n        }\n        return fields;\n    };\n\n    addCustomField = () => {\n        var newCustomInputs = this.state.customInput;\n        newCustomInputs.push({\n            label: \"Label\",\n            value: \"\",\n        });\n        this.setState({\n            customInput: newCustomInputs,\n        });\n    };\n\n    deleteCustomField = (id) => {\n        var newCustomInputs = this.state.customInput;\n        newCustomInputs.splice(id, 1);\n        this.setState({\n            customInput: newCustomInputs,\n        });\n    };\n\n    save = async () => {\n        await ContactsAPI.editContact(this.state.url, {\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            organisation: this.state.organisation,\n            role: this.state.role,\n            phone: this.state.phone\n        });\n        // go back and reload\n        var url = this.props.match.url;\n        url = url.substring(0, url.lastIndexOf(\"/\"))\n        url = url.substring(0, url.lastIndexOf(\"/\"));\n        this.props.history.push(url);\n        window.location.reload();\n    };\n\n    render() {\n        if (this.state.contact === null) {\n            return (\n                <Modal\n                    onClick={() => {\n                        this.props.history.goBack();\n                    }}\n                >\n                    Loading...\n                </Modal>\n            );\n        }\n        return (\n            <Modal>\n                <div className=\"edit-contact-modal\" onClick={() => {}}>\n                    <div className=\"edit-contact-card\">\n                        <div className=\"form-area\">\n                            <div className=\"edit-contact-row\">\n                                <ContactCardStar\n                                    starred={this.state.starred}\n                                    url={this.state.url}\n                                    size={30}\n                                />\n                            </div>\n\n                            <ProfilePhoto\n                                src={this.state.photoURL}\n                                alt=\"contact profile photo\"\n                                firstName={this.state.firstName}\n                                lastName={this.state.lastName}\n                            />\n                            <InputField\n                                type=\"text\"\n                                name=\"firstName\"\n                                label=\"First Name\"\n                                placeholder=\"e.g. Jane\"\n                                onChange={this.changeHandler}\n                                value={this.state.firstName}\n                            />\n                            <InputField\n                                type=\"text\"\n                                name=\"lastName\"\n                                label=\"Last Name\"\n                                placeholder=\"e.g. Doe\"\n                                onChange={this.changeHandler}\n                                value={this.state.lastName}\n                            />\n                            <InputField\n                                type=\"email\"\n                                name=\"email\"\n                                label=\"Email Address\"\n                                placeholder=\"e.g. jane.doe@email.com\"\n                                onChange={this.changeHandler}\n                                value={this.state.email}\n                            />\n                            <InputField\n                                type=\"text\"\n                                name=\"organisation\"\n                                label=\"Organisation\"\n                                placeholder=\"e.g. Hogwarts\"\n                                onChange={this.changeHandler}\n                                value={this.state.organisation}\n                            />\n                            <InputField\n                                type=\"text\"\n                                name=\"role\"\n                                label=\"Role\"\n                                placeholder=\"e.g. Wizard\"\n                                onChange={this.changeHandler}\n                                value={this.state.role}\n                            />\n                            <InputField\n                                type=\"text\"\n                                name=\"phone\"\n                                label=\"Phone Number\"\n                                placeholder=\"e.g. +61 302 203 392\"\n                                onChange={this.changeHandler}\n                                value={this.state.phone}\n                            />\n                            {this.getCustomFields()}\n                            <div\n                                className=\"new-field-button\"\n                                onClick={this.addCustomField}\n                            >\n                                + New Field\n                            </div>\n                        </div>\n                        <div className=\"button-row\">\n                            <button\n                                className=\"secondary-button button\"\n                                type=\"button\"\n                                name=\"cancel\"\n                                onClick={() => {\n                                    this.props.history.goBack();\n                                }}\n                            >\n                                Cancel\n                            </button>\n                            <button\n                                className=\"primary-button button\"\n                                type=\"button\"\n                                name=\"save\"\n                                disabled={!this.proceed()}\n                                onClick={this.save}\n                            >\n                                Save\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </Modal>\n        );\n    }\n}\n","import React from \"react\";\nimport { Route } from \"react-router\";\nimport Collapsible from \"react-collapsible\";\nimport \"../css/Groups.css\";\nimport { GroupsAPI } from \"../apis/groupsApi\";\nimport ContactCard from \"../components/groups/ContactCard\";\nimport AddCard from \"../components/groups/AddCard\";\nimport EditContact from \"../components/EditContact\";\n\nexport default class Groups extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            groups: [],\n            isLoaded: false,\n            searchTerm: \"\",\n        };\n    }\n\n    setSearchTerm = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    componentDidMount = async () => {\n        const groups = await GroupsAPI.getGroups();\n        console.log(groups);\n        this.setState({\n            groups: groups,\n            isLoaded: true,\n        });\n    };\n\n    render() {\n        if (!this.state.isLoaded) {\n            return <div>Loading...</div>;\n        }\n        return (\n            <div>\n                <Route\n                    exact\n                    path={`/groups/edit/:id`}\n                    component={EditContact}\n                ></Route>\n                <div className=\"groups-area\">\n                    <input\n                        type=\"text\"\n                        name=\"searchTerm\"\n                        placeholder=\"Search...\"\n                        onChange={this.setSearchTerm}\n                    />\n                    {this.state.groups.map((group) => (\n                        <div className=\"group-area\">\n                            <div className=\"title\">{group.name}</div>\n                            <Collapsible\n                                triggerClassName=\"trigger-text\"\n                                trigger=\"Expand\"\n                                triggerOpenedClassName=\"trigger-text\"\n                                triggerWhenOpen=\"Collapse\"\n                                open={true}\n                            >\n                                <div className=\"contact-card-area\">\n                                    {group.contactObjects\n                                        .filter((contact) => {\n                                            if (this.state.searchTerm === \"\")\n                                                return contact;\n                                            else if (\n                                                contact.firstName\n                                                    .toLowerCase()\n                                                    .includes(\n                                                        this.state.searchTerm.toLowerCase()\n                                                    )\n                                            )\n                                                return contact;\n                                        })\n                                        .map((contact, key) => {\n                                            return (\n                                                <div className=\"user\" key={key}>\n                                                    <ContactCard\n                                                        contact={contact}\n                                                    />\n                                                </div>\n                                            );\n                                        })}\n                                    <AddCard />\n                                </div>\n                            </Collapsible>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n","const BASE_URL = \"https://team-69-backend.herokuapp.com/crm/\";\n// const BASE_URL = \"http://127.0.0.1:8000/crm/\";\nconst id = sessionStorage.getItem(\"userId\");\nconst accountEndpoint = BASE_URL + \"useraccounts/\" + id + \"/\";\nconst profileEndpoint = BASE_URL + \"userprofiles/\" + id + \"/\";\n\nclass ProfileAPI {\n    static getUserProfile = async () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n        };\n        let accountResponse = await fetch(accountEndpoint, requestOptions);\n        let profileResponse = await fetch(profileEndpoint, requestOptions);\n        var accountData = await accountResponse.json();\n        let profileData = await profileResponse.json();\n        accountData.organisation = profileData.organisation;\n        accountData.role = profileData.role;\n        accountData.phone = profileData.phoneNumber;\n        accountData.image = profileData.image;\n        sessionStorage.setItem(\"image\", accountData.image);\n        return accountData;\n    };\n\n    static getProfileIcon = async () => {\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n        };\n        let profileResponse = await fetch(profileEndpoint, requestOptions);\n        const res = await profileResponse.json();\n        return res;\n    };\n\n    static updateProfile = async (user) => {\n        const form = new FormData();\n        form.append(\"id\", id);\n        form.append(\"url\", profileEndpoint);\n        form.append(\"userAccount\", accountEndpoint);\n        form.append(\"first_name\", user.firstName);\n        form.append(\"last_name\", user.lastName);\n        form.append(\"email\", user.email);\n        form.append(\"organisation\", user.organisation);\n        form.append(\"role\", user.role);\n        form.append(\"phoneNumber\", user.phone);\n        if (user.image !== null) form.append(\"image\", user.image);\n        const requestOptions = {\n            method: \"PATCH\",\n            headers: {\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n            body: form,\n        };\n        await fetch(accountEndpoint, requestOptions);\n        await fetch(profileEndpoint, requestOptions);\n        return { success: true };\n    };\n\n    static getCustomFields = async () => {\n        const endpoint = profileEndpoint + \"fields/\";\n        const requestOptions = {\n            method: \"GET\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n        };\n        const fields = await fetch(endpoint, requestOptions);\n        return fields.json();\n    };\n\n    static updateCustomFields = async (fields) => {\n        const endpoint = profileEndpoint + \"fields/\";\n        for (var field of fields) {\n            field.userAccount = id;\n        }\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n                Authorization: `token ${sessionStorage.getItem(\"token\")}`,\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                fields: fields,\n            }),\n        };\n        await fetch(endpoint, requestOptions);\n    };\n}\n\nexport default ProfileAPI;\n","import React from \"react\";\nimport \"../../css/Header.css\";\nimport ProfileAPI from \"../../apis/profileApi\";\n\n/**\n * Profile Icon\n * Icon on the nav bar which displays users profile picture,\n * which is specified by the url.\n * When clicked, shows user navigation menu\n */\nclass ProfileIcon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            url: \"https://techcommunity.microsoft.com/t5/image/serverpage/image-id/217078i525F6A9EF292601F/image-size/large?v=v2&px=999\",\n            dropdown: \"inactive\",\n            mode: \"off\",\n        };\n    }\n\n    toggleMenu = () => {\n        if (this.state.dropdown === \"inactive\") {\n            this.setState({\n                dropdown: \"active\",\n                mode: \"on\",\n            });\n        } else {\n            this.setState({\n                dropdown: \"inactive\",\n                mode: \"off\",\n            });\n        }\n    };\n\n    logout = () => {\n        sessionStorage.clear();\n    }\n\n    render() {\n        return (\n            <div class=\"profile-dropdown\">\n                <img\n                    className={\"profile-icon \" + this.state.mode}\n                    src={this.state.url}\n                    alt=\"User profile picture\"\n                    onClick={this.toggleMenu}\n                ></img>\n                <div className={\"dropdown \" + this.state.dropdown}>\n                    <ul>\n                        <a href=\"/groups\">\n                            <li>Home</li>\n                        </a>\n                        <a href=\"/profile\">\n                            <li>Profile</li>\n                        </a>\n                        <a href=\"/events\">\n                            <li>Events</li>\n                        </a>\n                        <a href=\"/settings\">\n                            <li>Settings</li>\n                        </a>\n                        <a href=\"/auth/logout\">\n                            <li onClick={this.logout}>Logout</li>\n                        </a>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProfileIcon;\n","import React from \"react\";\nimport { FontAwesome } from \"react-icons/fa\";\nimport { FaBell } from \"react-icons/fa\";\nimport \"../../css/Header.css\";\n\n/**\n * Notification Icon\n * situated on the header between dark mode toggle icon and profile icon\n * When clicked a dropdown of users notifications appears\n */\nclass NotificationIcon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdown: \"inactive\",\n            mode: \"off\",\n            notifications: [],\n        };\n    }\n\n    componentDidMount() {\n        this.loadData();\n        setInterval(this.loadData, 30000);\n    }\n\n    async loadData() {\n        try {\n            // TODO: Notification API call\n            // Set this.state.notifications to list of notifications\n            const notificationAPI = \"\";\n            // const res = await fetch(notificationAPI);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    toggleMenu = () => {\n        if (this.state.dropdown === \"inactive\") {\n            this.setState({\n                dropdown: \"active\",\n                mode: \"on\",\n            });\n        } else {\n            this.setState({\n                dropdown: \"inactive\",\n                mode: \"off\",\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"notification-dropdown\">\n                <div className={\"icon \" + this.state.mode} onClick={this.toggleMenu}>\n                    <FaBell />\n                </div>\n                <div className={\"dropdown \" + this.state.dropdown}>\n                    <ul>\n                        {this.state.notifications.length === 0 ?\n                        <li>No new notifications</li> :\n                        this.state.notifications.map(function(notif) {\n                            return (<li>{notif}</li>)\n                        })}\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default NotificationIcon;\n","import React from \"react\";\n\n/**\n * Popularity Counter\n * Icon on the header that shows the user how many people have\n * downloaded their contact information\n */\nclass PopularityCounter extends React.Component {\n    constructor(props) {\n        super(props);\n        // TODO: Retrieve popularity information to be displayed\n        this.state = {\n            popularity: \"1,428\",\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"popularity-dropdown\">\n                <div className=\"popularity\">{this.state.popularity}</div>\n                <div className=\"tool-tip\">Accumulate points as others download your contact information!</div>\n            </div>\n        );\n    }\n}\n\nexport default PopularityCounter;\n","import React from \"react\";\nimport \"../../css/Header.css\";\nimport { FaSun, FontAwesome } from \"react-icons/fa\";\nimport { FaMoon } from \"react-icons/fa\";\n\n/**\n * Dark mode toggle\n * changes app between light and dark mode when pressed \n * TODO: change to dark mode when pressed \n */\nclass DarkModeToggle extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mode: \"off\",\n            light: \"active\",\n            dark: \"inactive\"\n        };\n    }\n\n    onClick = () => {\n        if (this.state.mode === \"off\") {\n            this.setState({\n                mode: \"on\",\n                light: \"inactive\",\n                dark: \"active\"\n            });\n        } else {\n            this.setState({\n                mode: \"off\",\n                light: \"active\",\n                dark: \"inactive\"\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className={\"icon \" + this.state.mode} onClick={this.onClick}>\n                <FaMoon className={this.state.dark}/>\n                <FaSun className={this.state.light}/>\n            </div>\n        );\n    }\n}\n\nexport default DarkModeToggle;\n","import React from \"react\";\nimport ProfileIcon from \"./ProfileIcon\";\nimport \"../../css/Header.css\";\nimport NotificationIcon from \"./NotificationIcon\";\nimport PopularityCounter from \"./PopularityCounter\";\nimport DarkModeToggle from \"./DarkModeToggle\";\n\n/**\n * Header\n * Displays app logo and name on the top of the screen\n * - Popularity counter shows user how many people have downloaded their contact information\n * - Moon to toggle light/dark mode\n * - Bell to view notifications\n * - Profile picture, when clicked shows dropdown navigation menu\n */\nclass Header extends React.Component {\n    render() {\n        return (\n            <header>\n                <div className=\"header-content\">\n                    <div className=\"left-header\">\n                        <a href=\"/groups\">Logo and App Name</a>\n                    </div>\n                    <div className=\"right-header\">\n                        <PopularityCounter />\n                        <DarkModeToggle />\n                        <NotificationIcon />\n                        <ProfileIcon />\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../css/TwoSelectButton.css\";\nimport { FontAwesome } from \"react-icons/fa\";\nimport { FaTable, FaAddressBook } from \"react-icons/fa\";\n\n/*\n    Contacts View Button\n    refers to the toggle button that allows users to select \n    Group View or Contacts View \n    |  Group  | Contacts |\n */\n\nclass ContactsViewButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            leftButtonState: \"\",\n            rightButtonState: \"\",\n            leftLink: \"/groups\",\n            rightLink: \"/contacts\",\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.history.location.pathname === this.state.rightLink) {\n            this.setState({\n                leftButtonState: \"deselected\",\n                rightButtonState: \"selected\",\n            });\n        } else {\n            this.setState({\n                leftButtonState: \"selected\",\n                rightButtonState: \"deselected\",\n            });\n        }\n    }\n\n    leftOnClick = async () => {\n        if (this.props.history.location.pathname !== this.state.leftLink) {\n            this.props.history.push(this.state.leftLink);\n            this.setState({\n                leftButtonState: \"selected\",\n                rightButtonState: \"deselected\",\n            });\n        }\n    };\n\n    rightOnClick = async () => {\n        if (this.props.history.location.pathname !== this.state.rightLink) {\n            this.props.history.push(this.state.rightLink);\n            this.setState({\n                leftButtonState: \"deselected\",\n                rightButtonState: \"selected\",\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"two-select-button\">\n                <div\n                    className={\"left \" + this.state.leftButtonState}\n                    onClick={this.leftOnClick}\n                >\n                    <FaAddressBook /> Groups\n                </div>\n                <div\n                    className={\"right \" + this.state.rightButtonState}\n                    onClick={this.rightOnClick}\n                >\n                    <FaTable /> Contacts\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(ContactsViewButton);\n","import React from \"react\";\nimport \"../css/ContactsOptionsBar.css\";\nimport ContactsViewButton from \"./ContactsViewButton\";\nimport SearchBar from \"./SearchBar\";\nimport { FontAwesome } from \"react-icons/fa\";\nimport { FaPlus } from \"react-icons/fa\";\n\n/*\n    Contacts Options Bar \n    refers to the bar on top of the contacts views below the Nav bar\n    - Allows users to switch between Group view and Contacts view\n    - Allows users to sort and filter\n    - Allows users to search\n    - Allows users to Add new contact by clicking on the button\n */\n\nclass ContactsOptionsBar extends React.Component {\n    render() {\n        return (\n            <div className=\"options-bar\">\n                <div className=\"left-items\">\n                    <ContactsViewButton />\n                </div>\n                <div className=\"right-items\">\n                    {/* <SearchBar /> */}\n                    <button\n                        className=\"button primary-button\"\n                        id=\"add-contact-button\"\n                        onClick={this.newContactOnclick}\n                    >\n                        NEW CONTACT\n                    </button>\n                    <button\n                        className=\"button primary-button\"\n                        id=\"add-contact-button-small\"\n                        onClick={this.newContactOnclick}\n                    >\n                        <FaPlus />\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ContactsOptionsBar;\n","import React from \"react\";\nimport \"../css/SearchBar.css\";\nimport { FontAwesome } from \"react-icons/fa\";\nimport { FaSearch } from \"react-icons/fa\";\n\nclass SearchBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: \"\",\n        };\n    }\n\n    handleChange = async (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n        });\n    };\n\n    onClick = async (event) => {\n        // TODO: connect searching\n    };\n\n    render() {\n        return (\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    name=\"searchTerm\"\n                    placeholder=\"Search\"\n                    onChange={this.handleChange}\n                />\n                <div className=\"search-button\" onClick={this.onClick}>\n                    <FaSearch />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React, { useState, Component, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { useHistory, Route } from \"react-router\";\nimport { render } from \"react-dom\";\nimport { useContacts } from \"../apis/contactsApi\";\nimport \"../css/Contacts.css\";\nimport ContactsOptionsBar from \"../components/ContactsOptionsBar\";\nimport { BsListUl } from \"react-icons/bs\";\nimport { IoMdArrowDropdown, IoMdArrowDropleft } from \"react-icons/io\";\nimport { AiOutlineStar, AiFillStar } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons\";\nimport EditContact from \"../components/EditContact\";\n\nconst BASE_URL = \"https://team-69-backend.herokuapp.com/crm/\";\n\nvar sortUp = false;\n\nexport default function Contacts(props) {\n    // const { loading, items, error } = useContacts();\n\n    // if (loading) {\n    //     return <p>Loading contacts, sit tight...</p>;\n    // }\n    // if (error) {\n    //     return (\n    //         <div>\n    //             <p>Something went wrong!</p>\n    //             <p>{error.message}</p>\n    //         </div>\n    //     );\n    // }\n\n    const [organisation, setOrganisation] = useState(true);\n    const [role, setRole] = useState(true);\n    const [email, setEmail] = useState(true);\n    const [phone, setPhone] = useState(true);\n    const [notes, setNotes] = useState(true);\n    const [dropdown, setDropdown] = useState(false);\n    const location = useLocation();\n    const history = useHistory();\n\n    const [contacts, setContacts] = useState([]);\n\n    useEffect(() => {\n        getContacts();\n\n        async function getContacts(user) {\n            const requestOptions = {\n                method: \"GET\",\n                headers: {\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\",\n                    Authorization:\n                        `Basic ` +\n                        btoa(\n                            sessionStorage.getItem(\"username\") +\n                                \":\" +\n                                sessionStorage.getItem(\"password\")\n                        ),\n                },\n                mode: \"cors\",\n            };\n            const response = await fetch(\n                BASE_URL + \"contacts/\",\n                requestOptions\n            );\n            const data = await response.json();\n            console.log(data);\n\n            setContacts(data);\n        }\n    }, []);\n\n    function showDropdown() {\n        if (dropdown) {\n            return (\n                <div>\n                    <div>\n                        <button class=\"w-25\" onClick={() => setDropdown(false)}>\n                            <BsListUl /> Change Columns <IoMdArrowDropdown />\n                        </button>\n                    </div>\n                    {organisation ? (\n                        <h5>\n                            <button onClick={() => setOrganisation(false)}>\n                                Show Organisation\n                            </button>\n                        </h5>\n                    ) : (\n                        <h5>\n                            <button onClick={() => setOrganisation(true)}>\n                                Show Organisation\n                            </button>\n                        </h5>\n                    )}\n                    {role ? (\n                        <h5>\n                            <button onClick={() => setRole(false)}>\n                                Show Role\n                            </button>\n                        </h5>\n                    ) : (\n                        <h5>\n                            <button onClick={() => setRole(true)}>\n                                Show Role\n                            </button>\n                        </h5>\n                    )}\n                    {email ? (\n                        <h5>\n                            <button onClick={() => setEmail(false)}>\n                                Show Email\n                            </button>\n                        </h5>\n                    ) : (\n                        <h5>\n                            <button onClick={() => setEmail(true)}>\n                                Show Email\n                            </button>\n                        </h5>\n                    )}\n                    {phone ? (\n                        <h5>\n                            <button onClick={() => setPhone(false)}>\n                                Show Phone\n                            </button>\n                        </h5>\n                    ) : (\n                        <h5>\n                            <button onClick={() => setPhone(true)}>\n                                Show Phone\n                            </button>\n                        </h5>\n                    )}\n                    {notes ? (\n                        <h5>\n                            <button onClick={() => setNotes(false)}>\n                                Show Notes\n                            </button>\n                        </h5>\n                    ) : (\n                        <h5>\n                            <button onClick={() => setNotes(true)}>\n                                Show Notes\n                            </button>\n                        </h5>\n                    )}\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div>\n                        <button class=\"w-25\" onClick={() => setDropdown(true)}>\n                            <BsListUl /> Change Columns <IoMdArrowDropleft />\n                        </button>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n    function sortBy() {\n        sortUp = !sortUp;\n        if (sortUp)\n            contacts.sort((a, b) => (a.firstName > b.firstName ? 1 : -1));\n        else contacts.sort((a, b) => (a.firstName < b.firstName ? 1 : -1));\n    }\n\n    function renderTableHeader() {\n        return (\n            <div class=\"person d-flex\">\n                <div class=\"w-2\"></div>\n                <div class=\"w-2\">\n                    <IconContext.Provider value={{ color: \"a4a6f6\" }}>\n                        <AiFillStar />\n                    </IconContext.Provider>\n                </div>\n                <div class=\"w-10\">\n                    {/* <button onClick={\n                        sortBy()\n                    }>\n                        Name\n                    </button> */}\n                </div>\n                <div class=\"w-10\">Groups</div>\n                {organisation ? <div class=\"w-10\">Organisation</div> : null}\n                {role ? <div class=\"w-10\">Role</div> : null}\n                {email ? <div class=\"w-10\">Email</div> : null}\n                {phone ? <div class=\"w-10\">Phone</div> : null}\n                {notes ? <div class=\"w-15\">Notes</div> : null}\n                <div class=\"w-5 text-right\">Edit</div>\n            </div>\n        );\n    }\n\n    function showInitials(item) {\n        const first = item.firstName[0];\n        const second = item.lastName[0];\n        return (\n            <div class=\"initials\">\n                {first}\n                {second}\n            </div>\n        );\n    }\n\n    function renderItems() {\n        return contacts.map((item, index) => {\n            let x = index % 2;\n            return (\n                <div\n                    key={index}\n                    class={\"person d-flex white space-around color-\" + x}\n                >\n                    <div class=\"w-2\">{showInitials(item)}</div>\n                    <div class=\"w-2\">\n                        {item.starred ? (\n                            <div class=\"w-2\">\n                                <IconContext.Provider\n                                    value={{ color: \"#df5571\" }}\n                                >\n                                    <AiFillStar />\n                                </IconContext.Provider>\n                            </div>\n                        ) : (\n                            <div class=\"w-2\">\n                                <IconContext.Provider\n                                    value={{ color: \"a4a6f6\" }}\n                                >\n                                    <AiOutlineStar />\n                                </IconContext.Provider>\n                            </div>\n                        )}\n                    </div>\n                    <div class=\"w-10\">\n                        {item.firstName} {item.lastName}\n                    </div>\n                    <div class=\"w-10\">Groups</div>\n                    {organisation ? (\n                        <div class=\"w-10\">{item.organisation}</div>\n                    ) : null}\n                    {role ? <div class=\"w-10\">{item.role}</div> : null}\n                    {email ? (\n                        <div class=\"w-10\">\n                            <a href={\"mailto:\" + item.emailAddress}>\n                                {item.emailAddress}\n                            </a>\n                        </div>\n                    ) : (\n                        <div></div>\n                    )}\n                    {phone ? <div class=\"w-10\">{item.phoneNumber}</div> : null}\n                    {notes ? <div class=\"w-15\">{item.notes}</div> : null}\n                    {/* // TODO: Connect edit contacts */}\n                    <div\n                        class=\"w-5 text-right\"\n                        onClick={() => {\n                            history.push({\n                                pathname: `${location.pathname.replace(\n                                    /\\/$/g,\n                                    \"\"\n                                )}/edit/${item.id}`,\n                                url: item.url,\n                            });\n                        }}\n                    >\n                        Edit\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    return (\n        <div>\n            <Route\n                exact\n                path={`/contacts/edit/:id`}\n                component={EditContact}\n            ></Route>\n            {/* {showDropdown()} */}\n            {renderTableHeader()}\n            {renderItems()}\n        </div>\n    );\n}\n","import React from \"react\";\nimport validator from \"validator\";\nimport InputField from \"../components/InputField\";\nimport ProfileAPI from \"../apis/profileApi\";\n\nclass AuthController {\n    static emailChangeHandler = async (email) => {\n        var error, valid;\n        // validate email address\n        if (validator.isEmail(email)) {\n            error = \"\";\n            valid = true;\n        } else {\n            error = \"Email invalid!\";\n            valid = false;\n        }\n        return { error: error, valid: valid };\n    };\n\n    static nameChangeHandler = async (name) => {\n        var error, valid;\n        if (name.length >= 2) {\n            error = \"\";\n            valid = true;\n        } else {\n            error = \"Enter valid name!\";\n            valid = false;\n        }\n        return { error: error, valid: valid };\n    };\n\n    static passwordChangeHandler = async (password) => {\n        var error, valid;\n        var passwordValidator = require(\"password-validator\");\n        var schema = new passwordValidator();\n        schema\n            .is()\n            .min(8) // Minimum length 8\n            .is()\n            .max(100) // Maximum length 100\n            .has()\n            .uppercase() // Must have uppercase letters\n            .has()\n            .lowercase() // Must have lowercase letters\n            .has()\n            .digits(1) // Must have at least 1 digit\n            .has()\n            .not()\n            .spaces(); // Should not have spaces\n\n        if (schema.validate(password)) {\n            error = \"\";\n            valid = true;\n        } else {\n            error =\n                \"Password invalid! Valid password must contain at least 8 characters with uppercase, lowercase and digits, and must not contain any spaces.\";\n            valid = false;\n        }\n        return { error: error, valid: valid };\n    };\n\n    static confirmPasswordChangeHandler = async (password, confirmPassword) => {\n        var error, valid;\n        if (password === confirmPassword) {\n            error = \"\";\n            valid = true;\n        } else {\n            error = \"Passwords do not match.\";\n            valid = false;\n        }\n        return { error: error, valid: valid };\n    };\n\n    static loginUser = async (response) => {\n        sessionStorage.setItem(\"userId\", response.id);\n        sessionStorage.setItem(\"username\", response.username);\n        sessionStorage.setItem(\"token\", response.token);\n        const data = await ProfileAPI.getProfileIcon();\n        sessionStorage.setItem(\"image\", data.image);\n    }\n}\n\nexport default AuthController;\n","const BASE_URL = \"https://team-69-backend.herokuapp.com/crm/\";\n\nclass AuthAPI {\n    static checkEmail = async (email) => {\n        const endpoint = BASE_URL + \"api-auth/checkemail/\";\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            mode: \"cors\",\n            body: JSON.stringify({ email: email }),\n        };\n        let response = await fetch(endpoint, requestOptions);\n        return response.json();\n    };\n\n    static signup = async (user) => {\n        const endpoint = BASE_URL + \"useraccounts/\";\n        const userDetails = {\n            username: user.email,\n            email: user.email,\n            password: user.password,\n            first_name: user.first_name,\n            last_name: user.last_name,\n        };\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n            },\n            mode: \"cors\",\n            body: JSON.stringify(userDetails),\n        };\n        await fetch(endpoint, requestOptions);\n        let res = await AuthAPI.login(user);\n        return res;\n    };\n\n    static login = async (user) => {\n        const endpoint = BASE_URL + \"api-auth/alt-login/\";\n        console.log(user);\n        const requestOptions = {\n            method: \"POST\",\n            headers: {\n                Accept: \"*/*\",\n                \"Content-Type\": \"application/json\",\n            },\n            mode: \"cors\",\n            body: JSON.stringify({\n                username: user.email,\n                password: user.password,\n            }),\n        };\n        let response = await fetch(endpoint, requestOptions);\n        return response.json();\n    };\n}\n\nexport default AuthAPI;\n","import React from \"react\";\nimport InputField from \"../../components/InputField\";\nimport AuthController from \"../../controllers/AuthController\";\nimport AuthAPI from \"../../apis/authApi\";\n\nclass EnterEmail extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            emailError: \"\",\n            emailValid: false,\n        };\n    }\n\n    changeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let result = await AuthController.emailChangeHandler(this.state.email);\n        this.setState({\n            emailError: result.error,\n            emailValid: result.valid,\n        });\n    };\n\n    // CHECK IF EMAIL IS ASSOCIATED WITH AN EXISTING ACCOUNT\n    // IF YES, PUSH LOGIN PAGE, ELSE PUSH SIGNUP PAGE\n    nextHandler = async (event) => {\n        let data = { email: this.state.email };\n        let response = await AuthAPI.checkEmail(this.state.email);\n        let exists = response.success;\n        var path = \"\";\n        if (exists) {\n            path = \"/auth/login\";\n        } else {\n            path = \"/auth/signup\";\n        }\n        this.props.history.push({ pathname: path, state: data });\n    };\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <InputField\n                    name=\"email\"\n                    value={this.state.email}\n                    label=\"Email Address\"\n                    placeholder=\"e.g. jane.doe@gmail.com\"\n                    type=\"email\"\n                    onChange={this.changeHandler}\n                    disabled=\"false\"\n                    error={this.state.emailError}\n                />\n                <div className=\"button-row\">\n                    <button\n                        className=\"invisible-button\"\n                        type=\"button\"\n                        disabled={true}\n                    ></button>\n                    <button\n                        className=\"primary-button\"\n                        type=\"button\"\n                        name=\"next\"\n                        disabled={!this.state.emailValid}\n                        onClick={this.nextHandler}\n                    >\n                        NEXT\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default EnterEmail;\n","import React from \"react\";\nimport InputField from \"../../components/InputField\";\nimport AuthController from \"../../controllers/AuthController\";\nimport AuthAPI from \"../../apis/authApi\";\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: props.location.state.email,\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            emailError: \"\",\n            firstNameError: \"\",\n            lastNameError: \"\",\n            passwordError: \"\",\n            confirmPasswordError: \"\",\n            emailValid: true,\n            firstNameValid: false,\n            lastNameValid: false,\n            passwordValid: false,\n            confirmPasswordValid: false,\n            errorMessage:\n                \"Email already associated with existing account. Try again with a different email address. \",\n            failed: \"\",\n        };\n    }\n\n    emailChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let result = await AuthController.emailChangeHandler(this.state.email);\n        this.setState({\n            emailError: result.error,\n            emailValid: result.valid,\n        });\n    };\n\n    nameChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let error = event.target.name + \"Error\";\n        let valid = event.target.name + \"Valid\";\n        let result = await AuthController.nameChangeHandler(event.target.value);\n        this.setState({\n            [error]: result.error,\n            [valid]: result.valid,\n        });\n    };\n\n    passwordChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let result = await AuthController.passwordChangeHandler(\n            event.target.value\n        );\n        this.setState({\n            passwordError: result.error,\n            passwordValid: result.valid,\n        });\n        let confirmPasswordResult =\n            await AuthController.confirmPasswordChangeHandler(\n                this.state.password,\n                this.state.confirmPassword\n            );\n        this.setState({\n            confirmPasswordError: confirmPasswordResult.error,\n            confirmPasswordValid: confirmPasswordResult.valid,\n        });\n    };\n\n    confirmPasswordChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let result = await AuthController.confirmPasswordChangeHandler(\n            this.state.password,\n            this.state.confirmPassword\n        );\n        this.setState({\n            confirmPasswordError: result.error,\n            confirmPasswordValid: result.valid,\n        });\n    };\n\n    proceed = () => {\n        return (\n            this.state.emailValid &&\n            this.state.firstNameValid &&\n            this.state.lastNameValid &&\n            this.state.passwordValid &&\n            this.state.confirmPasswordValid\n        );\n    };\n\n    backHandler = async (event) => {\n        this.props.history.goBack();\n    };\n\n    nextHandler = async (event) => {\n        // redirect to home page\n        let response = await AuthAPI.signup({\n            email: this.state.email,\n            password: this.state.password,\n            first_name: this.state.firstName,\n            last_name: this.state.lastName,\n        });\n        if (response && response.success) {\n            await AuthController.loginUser(response);\n            sessionStorage.setItem(\"username\", response.username);\n            sessionStorage.setItem(\"password\", this.state.password);\n            this.props.history.push(\"/groups\");\n        } else {\n            this.setState({\n                failed: this.state.errorMessage,\n                emailValid: false,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <div>\n                    <InputField\n                        name=\"email\"\n                        value={this.state.email}\n                        label=\"Email Address\"\n                        placeholder=\"e.g. jane.doe@gmail.com\"\n                        type=\"email\"\n                        onChange={this.emailChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.emailError}\n                    />\n                    <InputField\n                        name=\"firstName\"\n                        value={this.state.firstName}\n                        label=\"First Name\"\n                        placeholder=\"e.g. Jane\"\n                        type=\"text\"\n                        onChange={this.nameChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.firstNameError}\n                    />\n                    <InputField\n                        name=\"lastName\"\n                        value={this.state.lasttName}\n                        label=\"Last Name\"\n                        placeholder=\"e.g. Doe\"\n                        type=\"text\"\n                        onChange={this.nameChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.lastNameError}\n                    />\n                    <InputField\n                        name=\"password\"\n                        value={this.state.password}\n                        label=\"Password\"\n                        placeholder=\"*************\"\n                        type=\"password\"\n                        onChange={this.passwordChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.passwordError}\n                    />\n                    <InputField\n                        name=\"confirmPassword\"\n                        value={this.state.confirmPassword}\n                        label=\"Confirm Password\"\n                        placeholder=\"*************\"\n                        type=\"password\"\n                        onChange={this.confirmPasswordChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.confirmPasswordError}\n                    />\n                </div>\n                <div className=\"input-error\">{this.state.failed}</div>\n                <div className=\"button-row\">\n                    <button\n                        className=\"secondary-button\"\n                        type=\"button\"\n                        name=\"next\"\n                        onClick={this.backHandler}\n                    >\n                        BACK\n                    </button>\n                    <button\n                        className=\"primary-button\"\n                        type=\"button\"\n                        name=\"next\"\n                        disabled={!this.proceed()}\n                        onClick={this.nextHandler}\n                    >\n                        SIGN UP\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport InputField from \"../../components/InputField\";\nimport AuthController from \"../../controllers/AuthController\";\nimport AuthAPI from \"../../apis/authApi\";\n\nclass Login extends React.Component {\n    static email = \"\";\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: props.location.state.email,\n            password: \"\",\n            emailError: \"\",\n            passwordError: \"\",\n            emailValid: true,\n            passwordValid: false,\n            errorMessage:\n                \"Incorrect email address or password. Please try again.\",\n            failed: \"\",\n        };\n    }\n\n    emailChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        let result = await AuthController.emailChangeHandler(this.state.email);\n        this.setState({\n            emailError: result.error,\n            emailValid: result.valid,\n        });\n    };\n\n    passwordChangeHandler = async (event) => {\n        await this.setState({ [event.target.name]: event.target.value });\n        if (event.target.value) {\n            this.setState({\n                passwordValid: true,\n            });\n        } else {\n            this.setState({\n                passwordValid: false,\n            });\n        }\n    };\n\n    proceed = () => {\n        return this.state.emailValid && this.state.passwordValid;\n    };\n\n    backHandler = async (event) => {\n        this.props.history.goBack();\n    };\n\n    // CONNECT LOGIN API\n    nextHandler = async (event) => {\n        let response = await AuthAPI.login({\n            email: this.state.email,\n            password: this.state.password,\n        });\n        if (\"id\" in response) {\n            await AuthController.loginUser(response);\n            sessionStorage.setItem(\"username\", response.username);\n            sessionStorage.setItem(\"password\", this.state.password);\n            this.props.history.push(\"/groups\");\n        } else {\n            this.setState({\n                failed: this.state.errorMessage,\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"auth-form\">\n                <div>\n                    <InputField\n                        name=\"email\"\n                        value={this.state.email}\n                        label=\"Email Address\"\n                        placeholder=\"e.g. jane.doe@gmail.com\"\n                        type=\"email\"\n                        onChange={this.emailChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.emailError}\n                    />\n                    <InputField\n                        name=\"password\"\n                        value={this.state.password}\n                        label=\"Password\"\n                        placeholder=\"*************\"\n                        type=\"password\"\n                        onChange={this.passwordChangeHandler}\n                        disabled=\"false\"\n                        error={this.state.passwordError}\n                    />\n                </div>\n                <div className=\"input-error\">{this.state.failed}</div>\n                <div className=\"button-row\">\n                    <button\n                        className=\"secondary-button\"\n                        type=\"button\"\n                        name=\"next\"\n                        onClick={this.backHandler}\n                    >\n                        BACK\n                    </button>\n                    <button\n                        className=\"primary-button\"\n                        type=\"button\"\n                        name=\"next\"\n                        disabled={!this.proceed()}\n                        onClick={this.nextHandler}\n                    >\n                        LOGIN\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;\n","import React from \"react\";\nimport InputField from \"../components/InputField\";\nimport CustomInputField from \"../components/CustomInputField\";\nimport ProfilePhoto from \"../components/ProfilePhoto\";\nimport AuthController from \"../controllers/AuthController\";\nimport \"../css/Profile.css\";\nimport ProfileAPI from \"../apis/profileApi\";\n\n/**\n * Profile Page\n * - Shows user their account information\n * - Allows user to modify their account information\n * - Allows user to add custom input fields in the form [{label: \"Label 1\", value: \"Value 1\"}, {label: \"Label 2\", value: \"Value 2\"}]\n */\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            buttonDisabled: true,\n            photoURL: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            email: \"\",\n            organisation: \"\",\n            role: \"\",\n            phone: \"\",\n            link: \"\",\n            emailError: \"\",\n            emailValid: true,\n            customInput: [],\n            defaultPhotoURL:\n                \"https://techcommunity.microsoft.com/t5/image/serverpage/image-id/217078i525F6A9EF292601F/image-size/large?v=v2&px=999\",\n            image: null,\n        };\n    }\n\n    // TODO: ADD user account fields\n    // request user profile data\n    async componentDidMount() {\n        const data = await ProfileAPI.getUserProfile();\n        const customFields = await ProfileAPI.getCustomFields();\n        this.setState({\n            photoURL:\n                data.image === null ? this.state.defaultPhotoURL : data.image,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            email: data.email,\n            organisation: data.organisation,\n            role: data.role,\n            phone: data.phone,\n            customInput: customFields,\n        });\n    }\n\n    changeHandler = async (event) => {\n        this.setState({\n            [event.target.name]: event.target.value,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    customChangeHandler = async (event) => {\n        const newCustomInput = this.state.customInput;\n        const id = parseInt(event.target.name);\n        newCustomInput[id] = {\n            label: this.state.customInput[id].label,\n            value: event.target.value,\n        };\n        this.setState({\n            customInput: newCustomInput,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    customLabelChangeHandler = async (event) => {\n        const newCustomInput = this.state.customInput;\n        const id = parseInt(event.target.name);\n        newCustomInput[id] = {\n            label: event.target.value,\n            value: this.state.customInput[id].value,\n        };\n        // labels must not be blank\n        this.setState({\n            customInput: newCustomInput,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    preventBlankLabel = () => {\n        for (const field of this.state.customInput) {\n            if (field.label.trim() === \"\") {\n                this.setState({\n                    buttonDisabled: true,\n                });\n            }\n        }\n    };\n\n    emailChangeHandler = async (event) => {\n        await this.setState({\n            [event.target.name]: event.target.value,\n        });\n        let result = await AuthController.emailChangeHandler(this.state.email);\n        this.setState({\n            emailError: result.error,\n            emailValid: result.valid,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    photoChangeHandler = async (event) => {\n        // creates temporary URL for selected photo file object\n        const selected = URL.createObjectURL(event.target.files[0]);\n        this.setState({\n            photoURL: selected,\n            buttonDisabled: false,\n            image: event.target.files[0],\n        });\n        this.preventBlankLabel();\n    };\n\n    getFields = () => {\n        return [\n            <InputField\n                type=\"text\"\n                name=\"firstName\"\n                label=\"First Name\"\n                placeholder=\"e.g. Jane\"\n                onChange={this.changeHandler}\n                value={this.state.firstName}\n            />,\n            <InputField\n                type=\"text\"\n                name=\"lastName\"\n                label=\"Last Name\"\n                placeholder=\"e.g. Doe\"\n                onChange={this.changeHandler}\n                value={this.state.lastName}\n            />,\n            <InputField\n                type=\"email\"\n                name=\"email\"\n                label=\"Email Address\"\n                placeholder=\"e.g. jane.doe@email.com\"\n                onChange={this.emailChangeHandler}\n                value={this.state.email}\n            />,\n            <InputField\n                type=\"text\"\n                name=\"organisation\"\n                label=\"Organisation\"\n                placeholder=\"e.g. Hogwarts\"\n                onChange={this.changeHandler}\n                value={this.state.organisation}\n            />,\n            <InputField\n                type=\"text\"\n                name=\"role\"\n                label=\"Role\"\n                placeholder=\"e.g. Wizard\"\n                onChange={this.changeHandler}\n                value={this.state.role}\n            />,\n            <InputField\n                type=\"text\"\n                name=\"phone\"\n                label=\"Phone Number\"\n                placeholder=\"e.g. +61 302 203 392\"\n                onChange={this.changeHandler}\n                value={this.state.phone}\n            />,\n            // <InputField\n            //     type=\"url\"\n            //     name=\"link\"\n            //     label=\"LinkedIn URL\"\n            //     placeholder=\"e.g. linkedin.com/in/jane-doe\"\n            //     onChange={this.changeHandler}\n            //     value={this.state.link}\n            // />,\n        ];\n    };\n\n    getLeftCol = () => {\n        const fields = this.getFields().concat(this.getCustomFields());\n        const colLen = Math.floor((fields.length + 1) / 2);\n        return fields.slice(0, colLen).map((item) => item);\n    };\n\n    getRightCol = () => {\n        const fields = this.getFields().concat(this.getCustomFields());\n        const colLen = Math.floor((fields.length + 1) / 2);\n        return fields.slice(colLen, fields.length).map((item) => item);\n    };\n\n    getCustomFields = () => {\n        var fields = [];\n        for (const [id, item] of this.state.customInput.entries()) {\n            fields.push(\n                <CustomInputField\n                    key={id}\n                    listId={id}\n                    label={item.label}\n                    type=\"text\"\n                    placeholder=\"Enter field value\"\n                    value={item.value}\n                    name={id}\n                    onChange={this.customChangeHandler}\n                    onLabelChange={this.customLabelChangeHandler}\n                    onDeleteChange={this.deleteCustomField}\n                />\n            );\n        }\n        return fields;\n    };\n\n    addCustomField = () => {\n        var newCustomInputs = this.state.customInput;\n        newCustomInputs.push({\n            label: \"Label\",\n            value: \"\",\n        });\n        this.setState({\n            customInput: newCustomInputs,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    deleteCustomField = (id) => {\n        var newCustomInputs = this.state.customInput;\n        newCustomInputs.splice(id, 1);\n        this.setState({\n            customInput: newCustomInputs,\n            buttonDisabled: false,\n        });\n        this.preventBlankLabel();\n    };\n\n    // TODO: add more fields\n    saveHandler = async (event) => {\n        await ProfileAPI.updateProfile({\n            firstName: this.state.firstName,\n            lastName: this.state.lastName,\n            email: this.state.email,\n            organisation: this.state.organisation,\n            role: this.state.role,\n            phone: this.state.phone,\n            image: this.state.image,\n        });\n        await ProfileAPI.updateCustomFields(this.state.customInput);\n        this.setState({\n            buttonDisabled: true,\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"profile-content\">\n                <div className=\"title-row\">\n                    <h3>Public Information</h3>\n                    <div className=\"info-dropdown\">\n                        <div className=\"info\">What's this?</div>\n                        <div className=\"tool-tip\">\n                            Your public information may be downloaded by other\n                            users of this application.\n                        </div>\n                    </div>\n                </div>\n                <ProfilePhoto\n                    src={this.state.photoURL}\n                    alt=\"User Profile Photo\"\n                    firstName={this.state.firstName}\n                    lastname={this.state.lastName}\n                    onChange={this.photoChangeHandler}\n                />\n                <div className=\"form\">\n                    <div className=\"col left-col\">{this.getLeftCol()}</div>\n                    <div className=\"col right-col\">\n                        {this.getRightCol()}\n                        <div\n                            className=\"new-field-button\"\n                            onClick={this.addCustomField}\n                        >\n                            + New Field\n                        </div>\n                    </div>\n                </div>\n                <div className=\"button-row\">\n                    <button className=\"invisible-button\" />\n                    <button\n                        className=\"primary-button\"\n                        disabled={this.state.buttonDisabled}\n                        onClick={this.saveHandler}\n                    >\n                        SAVE\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from \"react-router-dom\";\nimport Groups from \"../pages/Groups\";\nimport Header from \"./header/Header\";\nimport Contacts from \"../pages/Contacts\";\nimport EnterEmail from \"../pages/auth/EnterEmail\";\nimport SignUp from \"../pages/auth/SignUp\";\nimport Login from \"../pages/auth/Login\";\nimport Profile from \"../pages/Profile\";\nimport ContactsOptionsBar from \"./ContactsOptionsBar\";\nimport EditContact from \"./EditContact\";\n\n/**\n * App Router\n * @returns Router object with defined app routes\n */\n\nclass AppRouter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            contactsOptionsBar: <ContactsOptionsBar />,\n        };\n    }\n\n    isLoggedIn = () => {\n        const id = sessionStorage.getItem(\"userId\");\n        return id !== null;\n    };\n\n    contactsPage = () => {\n        return (\n            <div>\n                {this.state.contactsOptionsBar}\n                <Contacts />\n            </div>\n        );\n    };\n\n    groupsPage = () => {\n        return (\n            <div>\n                {this.state.contactsOptionsBar}\n                <Groups />\n            </div>\n        );\n    };\n\n    render() {\n        return (\n            <Router>\n                <Switch>\n                    {this.isLoggedIn() ? (\n                        <Route exact path=\"/\">\n                            <Redirect to=\"/groups\" />\n                        </Route>\n                    ) : (\n                        <Route exact path=\"/\" component={EnterEmail} />\n                    )}\n                    <Route exact path=\"/auth/signup\" component={SignUp} />\n                    <Route exact path=\"/auth/login\" component={Login} />\n                    <Route exact path=\"/auth/logout\">\n                        <Redirect to=\"/\" />\n                    </Route>\n                    <div>\n                        <Header />\n                        <Route\n                            exact\n                            path=\"/profile\"\n                            component={Profile}\n                        ></Route>\n                        <Route\n                            path=\"/groups\"\n                            component={this.groupsPage}\n                        ></Route>\n                        <Route\n                            path=\"/contacts\"\n                            component={this.contactsPage}\n                        ></Route>\n                    </div>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default AppRouter;\n","import React from \"react\";\nimport \"./css/App.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AppRouter from \"./components/Routes\";\n\n/*\nTo run the app on your local browser - from your terminal run:\n1. npm install \n2. npm run start\n*/\n\nfunction App() {\n    return (\n        <section className=\"body\">\n            <div>\n                <AppRouter/>\n            </div>\n        </section>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}